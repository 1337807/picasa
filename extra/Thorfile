require "picasa"

# Temporary requirement
MultiXml.parser = :libxml

class PicasaUploader < Thor
  include Thor::Actions

  desc "upload_all DIR", "Uploads all photos from given directory"
  def upload_all(dir = File.basename(Dir.getwd))
    require_credentials
    album_presenter = create_album(File.basename(dir))
    photos_number = 0
    inside(dir, :verbose => true) do
      Dir.entries(".").select { |e| e =~ /\.(jpg|jpeg|png|gif|bmp)$/i }.sort.each do |file|
        create_photo(album_presenter, file)
        photos_number += 1
      end
    end
    say "Finished uploading #{photos_number} photos"
  end

  no_tasks do
    def require_credentials
      say "You must specify GOOGLE_USER_ID env variable" and exit unless ENV["GOOGLE_USER_ID"]
      say "You must specify GOOGLE_PASSWORD env variable" and exit unless ENV["GOOGLE_PASSWORD"]
    end

    def create_album(album)
      say("Creating album: #{album}")
      client = Picasa::Client.new(user_id: ENV["GOOGLE_USER_ID"], password: ENV["GOOGLE_PASSWORD"])
      client.album.create(title: album)
    end

    def create_photo(album, path)
      say("Uploading photo #{path} to album #{album.title}")
      client = Picasa::Client.new(user_id: ENV["GOOGLE_USER_ID"], password: ENV["GOOGLE_PASSWORD"])
      client.photo.create(album.id, file_path: path)
    end
  end
end
